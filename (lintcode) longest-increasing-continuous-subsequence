public class Solution {
    /*
     * @param A: An array of Integer
     * @return: an integer
     */
    public int longestIncreasingContinuousSubsequence(int[] A) {
        // write your code here
        if(A==null || A.length==0) 
            return 0;
        int[] dp = new int[A.length];
        int[] dp2 = new int[A.length];
        Arrays.fill(dp,1);
        Arrays.fill(dp2,1);
        int max=1;
        for(int i=1; i<A.length; i++){
            if(A[i]>A[i-1])
                dp[i]=dp[i-1]+1;
            else
                dp[i]=1;
            max=Math.max(max,dp[i]);
        }
        for(int i=A.length-2; i>=0; i--){
            if(A[i]>A[i+1])
                dp2[i]=dp2[i+1]+1;
            else
                dp2[i]=1;
            max=Math.max(max,dp2[i]);
        }
        return max;
    }
}
