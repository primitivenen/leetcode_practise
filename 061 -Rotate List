

https://www.douban.com/group/topic/96478913/?start=200

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head == null || head.next == null) return head; 
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode fast=dummy, slow=dummy;
        int i;
        for(i=0; fast.next!=null; i++){
            fast = fast.next;
        }
        for(int j=i-k%i;j>0;j--){
            slow = slow.next;
        }
        fast.next=dummy.next;
        dummy.next=slow.next;
        slow.next =null;
        return dummy.next;
    }
}

//2nd round

    public ListNode rotateRight(ListNode head, int k) {
        // write your code here
        if(head==null ||head.next==null) return head;
        if(k==0) return head;
        ListNode slow=head, fast=head, pre=head;
        int count=0, len=1;
        while(fast.next!=null){
            fast=fast.next;
            len++;
        }
        fast.next=head;
        for(int i=0; i<len-k%len; i++){
            fast=fast.next;
        }
        ListNode newhead=fast.next;
        fast.next=null;
        return newhead;
    }
