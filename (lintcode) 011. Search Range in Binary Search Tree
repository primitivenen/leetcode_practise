/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */


public class Solution {
    /*
     * @param root: param root: The root of the binary search tree
     * @param k1: An integer
     * @param k2: An integer
     * @return: return: Return all keys that k1<=key<=k2 in ascending order
     */
    public List<Integer> searchRange(TreeNode root, int k1, int k2) {
        // write your code here
        List<Integer> res = new ArrayList<>();
        if(root==null || k1>k2) return res;
        helper(root, k1, k2, res);
        return res;
    }
    public void helper(TreeNode root, int k1, int k2, List<Integer> res){
        if(root==null)  return;
        helper(root.left, k1, k2, res);
        if(root.val>=k1 && root.val<=k2) res.add(root.val);
        helper(root.right, k1, k2, res);
    }
}
