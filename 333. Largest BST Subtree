/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int largestBSTSubtree(TreeNode root) {
        if(root==null) return 0;
        if(root.left==null && root.right==null) return 1;
        if(isValid(root, Integer.MIN_VALUE, Integer.MAX_VALUE))
            return countNode(root);
        return Math.max(largestBSTSubtree(root.left),largestBSTSubtree(root.right));
    }
    public boolean isValid(TreeNode root, int min, int max){
        if(root==null) return true;
        if(root.val<=min) return false;
        if(root.val>=max) return false;
        return isValid(root.left, min, root.val) && isValid(root.right, root.val, max);
    }
    public int countNode(TreeNode root){
        if(root==null) return 0;
        if(root.left==null && root.right==null) return 1;
        return 1+countNode(root.left)+countNode(root.right);
    }
}
