/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */


public class Solution {
    /*
     * @param root: A Tree
     * @return: Postorder in ArrayList which contains node values.
     */
    public List<Integer> postorderTraversal(TreeNode root) {
        // write your code here
        LinkedList<Integer> res = new LinkedList<Integer>();
        if(root==null) return res;
        Stack<TreeNode> mylist = new Stack<>();
        mylist.push(root);
        while(!mylist.empty()){
            TreeNode temp=mylist.pop();
            res.addFirst(temp.val);
            if(temp.left!=null) mylist.push(temp.left);
            if(temp.right!=null) mylist.push(temp.right);
        }
        return res;
    }
}
