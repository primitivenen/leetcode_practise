
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode insertionSortList(ListNode head) {
        if(head == null){
            return head;
        }
        ListNode dmy = new ListNode(0);
        ListNode cur = head;
        ListNode pre = dmy;
        ListNode next = null;
        while(cur != null){
            next = cur.next;
            while(pre.next!=null && pre.next.val<cur.val){
                pre=pre.next;
            }
            cur.next=pre.next;
            pre.next=cur;
            cur=next;
            pre=dmy;
        }
        return dmy.next;
    }
}


//2nd round

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode insertionSortList(ListNode head) {
        ListNode helper = new ListNode(0);
        ListNode pre=helper;
        ListNode cur=head;
        while(cur!=null){
            pre=helper;
            ListNode next=cur.next;
            while(pre.next!=null && pre.next.val<cur.val){
                pre=pre.next;
            }
            cur.next=pre.next;
            pre.next=cur;
            cur=next;
        }
        return helper.next;        
    }
}
