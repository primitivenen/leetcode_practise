

public class Solution {
    public int lengthOfLIS(int[] nums) {
        if(nums.length==0){
            return 0;
        }
        int[] dp = new int[nums.length];
        dp[0]=1;
        int maxans=1;
        for(int i=1; i<dp.length; i++){
            int maxval=0;
            for(int j=0; j<i; j++){
                if(nums[i]>nums[j]){
                    maxval=Math.max(maxval, dp[j]);
                }
                dp[i]=maxval+1;
            }
            maxans=Math.max(maxans, dp[i]);
        }
        return maxans;
    }
}


//2nd round

class Solution {
    public int lengthOfLIS(int[] nums) {
        if(nums==null || nums.length==0)
            return 0;
        int[] max = new int[nums.length];
        int result=0;
        for(int i=0; i<nums.length; i++){
            max[i]=1;
            for(int j=0; j<i; j++){
                if(nums[i]>nums[j])
                    max[i]=Math.max(max[i],max[j]+1);
            }
            result=Math.max(result,max[i]);
        }
        return result;
    }
};
